/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
    collections: {
      users: User;
      products: Product;
      'products-categories': ProductsCategory;
      'products-tags': ProductsTag;
      unions: Union;
      media: Media;
      posts: Post;
      category: Category;
      tags: Tag;
      clubs: Club;
      'tournament-banners': TournamentBanner;
      'poker-rooms': PokerRoom;
      'payload-preferences': PayloadPreference;
      'payload-migrations': PayloadMigration;
    };
    globals: {
      contacts: Contacts;
      faq: FAQ;
    };
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "users".
   */
  export interface User {
    id: string;
    updatedAt: string;
    createdAt: string;
    email: string;
    resetPasswordToken?: string | null;
    resetPasswordExpiration?: string | null;
    salt?: string | null;
    hash?: string | null;
    loginAttempts?: number | null;
    lockUntil?: string | null;
    password: string | null;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "products".
   */
  export interface Product {
    id: string;
    published?: boolean | null;
    image?: Media | null;
    category?: ProductsCategory;
    tags?: (string | ProductsTag)[] | null;
    title: string;
    price: number;
    discount?: number | null;
    description?: string | null;
    content?:
      | {
          title?: string | null;
          body?: {
            root: {
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format:
                | 'left'
                | 'start'
                | 'center'
                | 'right'
                | 'end'
                | 'justify'
                | '';
              indent: number;
              type: string;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          body_html?: string | null;
          id?: string | null;
        }[]
      | null;
    updatedAt: string;
    createdAt: string;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "media".
   */
  export interface Media {
    id: string;
    alt?: string | null;
    updatedAt: string;
    createdAt: string;
    url?: string | null;
    filename?: string | null;
    mimeType?: string | null;
    filesize?: number | null;
    width?: number | null;
    height?: number | null;
    sizes?: {
      thumbnail?: {
        url?: string | null;
        width?: number | null;
        height?: number | null;
        mimeType?: string | null;
        filesize?: number | null;
        filename?: string | null;
      };
      card?: {
        url?: string | null;
        width?: number | null;
        height?: number | null;
        mimeType?: string | null;
        filesize?: number | null;
        filename?: string | null;
      };
      tablet?: {
        url?: string | null;
        width?: number | null;
        height?: number | null;
        mimeType?: string | null;
        filesize?: number | null;
        filename?: string | null;
      };
    };
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "products-categories".
   */
  export interface ProductsCategory {
    id: string;
    title: string;
    updatedAt: string;
    createdAt: string;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "products-tags".
   */
  export interface ProductsTag {
    id: string;
    title: string;
    updatedAt: string;
    createdAt: string;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "unions".
   */
  export interface Union {
    id: string;
    published?: boolean | null;
    image?: string | Media | null;
    title: string;
    country?: ('US' | 'CIS' | 'CA' | 'MX' | 'GB' | 'FR' | 'DE' | 'IT') | null;
    chipPrice?: number | null;
    chipPriceCurrency?:
      | (
          | 'USD'
          | 'CAD'
          | 'MXN'
          | 'GBP'
          | 'EUR'
          | 'JPY'
          | 'CNY'
          | 'CHF'
          | 'SEK'
          | 'NZD'
          | 'KRW'
          | 'SGD'
          | 'NOK'
          | 'INR'
          | 'RUB'
          | 'ZAR'
          | 'TRY'
          | 'BRL'
          | 'TWD'
          | 'DKK'
          | 'PLN'
          | 'THB'
          | 'IDR'
          | 'HUF'
          | 'CZK'
          | 'ILS'
          | 'CLP'
          | 'PHP'
        )
      | null;
    union?: string | null;
    app?: string | null;
    gameId?: string | null;
    updatedAt: string;
    createdAt: string;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "posts".
   */
  export interface Post {
    id: string;
    publishedAt: string;
    published?: boolean | null;
    exclusive?: boolean | null;
    title: string;
    slug?: string | null;
    editSlug?: boolean | null;
    image?: string | Media | null;
    category: string | Category;
    tags?: (string | Tag)[] | null;
    content?:
      | {
          title?: string | null;
          body?: {
            root: {
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format:
                | 'left'
                | 'start'
                | 'center'
                | 'right'
                | 'end'
                | 'justify'
                | '';
              indent: number;
              type: string;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          body_html?: string | null;
          id?: string | null;
        }[]
      | null;
    author: string | User;
    meta?: {
      title?: string | null;
      description?: string | null;
      image?: string | Media | null;
    };
    updatedAt: string;
    createdAt: string;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "category".
   */
  export interface Category {
    id: string;
    title: string;
    publishedAt: string;
    updatedAt: string;
    createdAt: string;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "tags".
   */
  export interface Tag {
    id: string;
    title: string;
    slug?: string | null;
    editSlug?: boolean | null;
    updatedAt: string;
    createdAt: string;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "clubs".
   */
  export interface Club {
    id: string;
    published?: boolean | null;
    image?: string | Media | null;
    tags?: (string | null) | Tag;
    title: string;
    clubId: string;
    country?: ('US' | 'CIS' | 'CA' | 'MX' | 'GB' | 'FR' | 'DE' | 'IT') | null;
    Rating?: number | null;
    positionInRating?: number | null;
    rakeback?: number | null;
    agentsRakeback?: number | null;
    windowsAppLink?: string | null;
    appleAppLink?: string | null;
    androidAppLink?: string | null;
    chipPrice?: number | null;
    chipPriceCurrency?:
      | (
          | 'USD'
          | 'CAD'
          | 'MXN'
          | 'GBP'
          | 'EUR'
          | 'JPY'
          | 'CNY'
          | 'CHF'
          | 'SEK'
          | 'NZD'
          | 'KRW'
          | 'SGD'
          | 'NOK'
          | 'INR'
          | 'RUB'
          | 'ZAR'
          | 'TRY'
          | 'BRL'
          | 'TWD'
          | 'DKK'
          | 'PLN'
          | 'THB'
          | 'IDR'
          | 'HUF'
          | 'CZK'
          | 'ILS'
          | 'CLP'
          | 'PHP'
        )
      | null;
    updatedAt: string;
    createdAt: string;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "tournament-banners".
   */
  export interface TournamentBanner {
    id: string;
    published?: boolean | null;
    name: string;
    link?: string | null;
    desktopImage?: string | Media | null;
    mobileImage?: string | Media | null;
    updatedAt: string;
    createdAt: string;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "poker-rooms".
   */
  export interface PokerRoom {
    id: string;
    published?: boolean | null;
    image?: string | Media | null;
    roomLogo?: string | Media | null;
    tags?: (string | null) | Tag;
    exclusive?: boolean | null;
    activeLanguages?: ('en' | 'es' | 'ua' | 'ru')[] | null;
    title: string;
    roomId: string;
    country?: ('US' | 'CIS' | 'CA' | 'MX' | 'GB' | 'FR' | 'DE' | 'IT') | null;
    rating?: number | null;
    positionInRating?: number | null;
    rakeback?: number | null;
    agentsRakeback?: number | null;
    windowsAppLink?: string | null;
    appleAppLink?: string | null;
    androidAppLink?: string | null;
    minDeposit?: number | null;
    depositBonus?: number | null;
    roomRakeback?: number | null;
    ourRakeback?: number | null;
    content?:
      | {
          title?: string | null;
          body?: {
            root: {
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format:
                | 'left'
                | 'start'
                | 'center'
                | 'right'
                | 'end'
                | 'justify'
                | '';
              indent: number;
              type: string;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          body_html?: string | null;
          id?: string | null;
        }[]
      | null;
    updatedAt: string;
    createdAt: string;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "payload-preferences".
   */
  export interface PayloadPreference {
    id: string;
    user: {
      relationTo: 'users';
      value: string | User;
    };
    key?: string | null;
    value?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    updatedAt: string;
    createdAt: string;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "payload-migrations".
   */
  export interface PayloadMigration {
    id: string;
    name?: string | null;
    batch?: number | null;
    updatedAt: string;
    createdAt: string;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "contacts".
   */
  export interface Contacts {
    id: string;
    contact?:
      | {
          title: string;
          telegram?: string | null;
          whatsapp?: string | null;
          facebook?: string | null;
          twitter?: string | null;
          instagram?: string | null;
          email?: string | null;
          id?: string | null;
        }[]
      | null;
    updatedAt?: string | null;
    createdAt?: string | null;
  }
  /**
   * This interface was referenced by `Config`'s JSON-Schema
   * via the `definition` "faq".
   */
  export interface FAQ {
    id: string;
    faqItem?:
      | {
          question: string;
          answer: {
            root: {
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format:
                | 'left'
                | 'start'
                | 'center'
                | 'right'
                | 'end'
                | 'justify'
                | '';
              indent: number;
              type: string;
              version: number;
            };
            [k: string]: unknown;
          };
          body_html?: string | null;
          id?: string | null;
        }[]
      | null;
    updatedAt?: string | null;
    createdAt?: string | null;
  }